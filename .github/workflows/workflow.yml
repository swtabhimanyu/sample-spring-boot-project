# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Building a docker image from java and pushing to ACR and deploying to AKS

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package
    - name: Saving jar
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: /home/runner/work/sample-spring-boot-project/sample-spring-boot-project/target/demo-0.0.1-SNAPSHOT.jar
        retention-days: 1

    - name: Run Trivy on project filesystem
      id: trivy_scan
      continue-on-error: true
      uses: aquasecurity/trivy-action@0.28.0
      with:
        target: '.'                   # Scans the entire repository
        format: 'table'
        exit-code: '0'                # Do not fail the job on vulnerabilities
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Check Trivy results and set warnings
      run: |
        if grep -q "CRITICAL\|HIGH" trivy-results.log; then
        echo "::warning::Trivy scan found vulnerabilities. Review the logs for details."
          cat trivy-results.log
        else
          echo "No critical or high vulnerabilities found."
        fi
